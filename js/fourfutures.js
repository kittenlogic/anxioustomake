function getFuture() {
  var futures = ['Communism (Egalitarianism and Abundance)', 'Rentism (Hierarchy and Abundance)', 'Socialism (Egalitarianism and Scarcity)', 'Exterminism (Hierarchy and Scarcity)'];
  var future = futures[Math.floor(Math.random() * futures.length)];
  
  var bizmodels = [
    'an Airbnb-like platform', 
    'a ridesharing platform', 
    'a TaskRabbit-like service', 
    'a subscription service', 
    'a crowdsourcing platform',
    'a gamified crowdsourcing platform', 
    'a crowdsourcing platform that aggregates self-tracking data',
    'a crowdsourced intellectual property consortium that grants patents',
    'a crowdsourced risk management platform', 
    'wearble tech that aggregates user data',
    'a knowledge sharing platform',
    'a sharing economy platform that rents boats',
    'a sharing economy platform that rents private planes',
    'a sharing economy platform that rents construction equipment',
    'a sharing economy platform that rents endangered animals',
    'a sharing economy platform that rents survival gear',
    'a sharing economy platform that rents adventure sports gear',
    'a sharing economy platform that rents RVs',
    'a sharing economy platform that rents storage space',
    'a sharing economy platform that rents land',
    'a sharing economy platform that rents power tools',
    'a sharing economy platform that automates things',
    'a sharing economy company that retrofits dead malls',
    'a sharing economy company that retrofits abandoned office buildings',
    'a sharing economy company that occupies dying office parks',
    'a sharing economy company that occupies foreclosed homes', 
    'a gig economy ESOP (employee stock ownership plan) company',
    'a digital platform that faciliates democratic processes'
  ];

  var bizmodel = bizmodels[Math.floor(Math.random() * bizmodels.length)];

  var xfactors = [
    'for solidarity networks',
    'powered by pirates',
    'for cooperatives',
    'for workers\' rights',
    'for ending patriarchy',
    'for ending white supremacy',
    'for prison abolition',
    'for life in a police state',
    'for senior care',
    'for feminists',
    'for resisting gentrification',
    'for climate change adaptation',
    'for climate disasters',
    'for migrant populations',
    'for borderless states',
    'for survivalists',
    'powered by artifical intelligence',
    'for perpetually unemployed millennials',
    'for gated communities',
    'for private islands',
    'for terrorism paranoia',
    'for biological quarantines',
    'for ghettos',
    'for detention centers',
    'for buying off the angry mob',
    'for private security',
    'for renewable energy',
    'for automatic factories',
    'for 3d printing',
    'for private security drones',
    'for surveillance drones',
    'for vertical farming',
    'for unpatentable things',
    'for copyright cartels',
    'for preppers',
    'for bodyguards',
    'for environmental catastophe prepardness',
    'for local self-reliance',
    'for mutual aid',
    'for propaganda',
    'for forecasting',
    'for decolonization',
    'for re-indigenization',
    'for sousveillance',
    'for surveillance',
    'for aging',
    'for life extension',
    'for vulnerable populations',
    'for healing intergenerational trauma',
    'for migrant labor',
    'for systemic collapse',
    'for illness',
    'for public agency',
    'for failure',
    'for ruin',
    'for kindness',
    'for the colonization of space',
    'for hospitality',
    'for airport security',
    'for unattended baggage',
    'for viruses',
    'for a tsunami',
    'for smart grids',
    'for domestic workers',
    'for sleep',
    'for sovereignty',
    'for the job insecure',
    'for known unknowns',
    'for refusal of work',
    'for reform or revolution',
    'for public education',
    'for dissapointment',
    'for vertical slums',
    'for surplus populations',
    'for "smart" things',
    'for private military contractors',
    'for private guards',
    'for biotech cooperatives',
    'for patent trolls',
    'for internet trolls',
    'for local food systems',
    'for local food coops',
    'for municipal enterprises',
    'for worker cooperatives',
    'for community land trusts',
    'for the partnership state',
    'for quantified selfies',
    'for body hacking',
    'for quantified babies',
    'for billionaire Marxists',
    'for biochemical warfare',
    'for cyberwarfare',
    'for growing collective wealth',
    'for lifelong learners',
    'for a new model of large-scale worker-owned and community-benefiting businesses',
    'for a green economy',
    'for cross-sectoral collaboration',
    'for language justice',
    'for Community Development Corporations (CDCs)',
    'for Community Development Financial Institutions (CDFIs)',
    'for Transit-Oriented Development (TOD)',
    'powered by blockchain technology',
    'for cryptocurrency ponzi schemes',
    'for fiscal transparency',
    'for understanding risk',
    'for social and economic justice',
    'for impact investors',
    'for the redistribution of wealth',
    'for reparations',
    'for election reform',
    'for transportation infrastructure planning',
    'for healthcare reform',
    'for entrepreneurs',
    'for solopreneurs',
    'for solo retreats',
    'for solo violin',
    'for dance offs',
    'for endurance performances',
    'for communal meal ideas',
    'for community gardens',
    'for quiet time',
    'for navigating in extreme weather conditions',
    'for the right to be lazy',
    'for therapy',
    'for pro-bono legal services',
    'for street vendors',
    'for unthinking design thinking',
    'for strategic planning',
    'for poets',
    'for accessibility'
    ];

  var xfactor = xfactors[Math.floor(Math.random() * xfactors.length)];
    
  $(".future").append('<span class="scenario">Scenario: ' + future +'</span><br/><span class="design">Design '+ bizmodel + ' ' + xfactor + '</span>');
  console.log(future);
}


$(".makefuture").on('click', function(){
  $(".future").empty();
  getFuture();
  console.log(Math.random()); 
});
